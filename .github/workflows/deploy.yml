name: ðŸš€ Deploy website on push

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  ssh-deploy:
    name: ðŸš€ SSH Deploy
    runs-on: ubuntu-latest
    steps:
    - name: ðŸšš Get latest code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: ðŸ”‘ Setup SSH key
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: ðŸ“¡ Deploy via SSH  
      if: github.event_name == 'push'
      env:
        SSH_SERVER: ${{ secrets.SSH_SERVER }}
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        SSH_PORT: ${{ secrets.SSH_PORT }}
        SSH_DESTINATION_PATH: ${{ secrets.SSH_DESTINATION_PATH }}
      run: |
        ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_SERVER }} >> ~/.ssh/known_hosts
        echo "Creating deployment archive..."
        tar --exclude='node_modules' --exclude='.git' --exclude='database/development.sqlite' --exclude='*.log' --exclude='.github' --warning=no-file-changed -czf deploy.tar.gz .
        echo "Uploading files to server..."
        scp -P ${{ secrets.SSH_PORT }} deploy.tar.gz ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_SERVER }}:${{ secrets.SSH_DESTINATION_PATH }}/
        echo "Extracting files on server..."
        ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_SERVER }} "cd ${{ secrets.SSH_DESTINATION_PATH }} && tar -xzf deploy.tar.gz && rm deploy.tar.gz"
        echo "Cleaning up local archive..."
        rm deploy.tar.gz
        echo "Deployment completed successfully!"
    
    - name: ðŸ§ª Test deployment configuration
      if: github.event_name == 'pull_request'
      run: |
        ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_SERVER }} >> ~/.ssh/known_hosts
        ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_SERVER }} "
          echo 'SSH connection successful' &&
          cd ${{ secrets.SSH_DESTINATION_PATH }} &&
          echo 'Directory accessible' &&
          echo 'Deployment configuration verified'
        "